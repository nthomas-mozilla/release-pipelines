#! /usr/bin/env python

import sys

from graphviz import Digraph
import yaml

fill_colours = {
    'relman': 'sienna2',
    'releng': 'khaki',
    'qa': 'lightcyan',
    'security': 'darkseagreen2',
    'default': 'grey80',
}

def get_style(step):
    style = {}
    if step['url'] == 'https://signoff.mozilla-releng.org/':
        style['shape'] = 'oval'
        style['style'] = 'filled'
        who = step['params']['who'].keys()[0]
        style['fillcolor'] = fill_colours.get(who or default)
    elif step['url'] == 'https://taskcluster.mozilla-releng.org/':
        style['shape'] = 'box'
    return style


def add_edge(g, out, in_):
    g.edge(out, in_)


def add_node(g, node):
    g.node(node['id'], label=node['name'], _attributes=get_style(node))


def build(desc, g):
    """Function to take a descriptor and populate a graph."""
    for step in desc['steps']:
        add_node(g, step)
        for e in step.get('upstream', []):
            add_edge(g, e, step['id'])


args = sys.argv[1:]

if len(args) < 1:
  print "Pass at least one yaml file for display"
  sys.exit(1)

for arg in args:
    print "Processing %s..." % arg,
    pipeline = yaml.load(open(arg));
    dot = Digraph(format='pdf')
    build(pipeline, dot)
    dot.render(filename=arg.replace('.yml', '.gv'), view=True)
    print "done"
